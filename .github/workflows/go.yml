name: Go

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: make install

    - name: Versioning for non master branch
      if: github.ref != 'ref/head/master'
      run: |
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        echo $git_hash >> VERSION
        
    - name: Packaging preparation
      run: |
        cat VERSION
        regex_express="s/{{Version}}/`cat VERSION`/"
        # generate amd64 rpm spec file
        sed $regex_express packaging/rpm/build.amd64.spec > bin/build.amd64.spec
        # generate arm64 rpm spec file
        sed $regex_express packaging/rpm/build.arm64.spec > bin/build.arm64.spec
        # generate amd64 deb spec file
        # generate arm64 deb spec file
        
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: binary_artifacts
        path: bin/

  rpm-amd64-packaging:
    name: Linux amd64 packaging
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Download built artifacts
      uses: actions/download-artifact@v2
      with:
        name: binary_artifacts 

    - name: Display structure of downloaded files
      run: ls -R

    - name: Build amd64 rpms
      uses: wyTrivail/rpmbuild@v2.0.6
      id: amd64_rpm
      with:
        spec_file: build.amd64.spec
        arch: x86_64

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: amd64_rpm
        path: ${{ steps.amd64_rpm.outputs.rpm_dir_path }} # both arm64 and amd64 rpms are in the same folder

  rpm-arm64-packaging:
    name: Linux arm64 packaging
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Download built artifacts
      uses: actions/download-artifact@v2
      with:
        name: binary_artifacts 

    - name: Display structure of downloaded files
      run: ls -R

    - name: Build arm64 rpms
      uses: wyTrivail/rpmbuild@v2.0.6 
      id: arm64_rpm
      with:
        spec_file: build.arm64.spec
        arch: aarch64

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: arm64_rpm
        path: ${{ steps.arm64_rpm.outputs.rpm_dir_path }} # both arm64 and amd64 rpms are in the same folder

  msi-packaging:
    name: Windows packaging
    needs: build
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v2

    - name: Download built artifacts
      uses: actions/download-artifact@v2
      with:
        name: binary_artifacts 

    - name: Display structure of downloaded files
      run: ls -R

    - name: Install go-msi
      run: choco install -y "go-msi"

    - name: Prepare PATH
      shell: bash
      run: |
        echo "::add-path::$WIX\\bin"
        echo "::add-path::C:\\Program Files\\go-msi"

    - name: Build MSI
      id: buildmsi
      shell: bash
      run: |
        mkdir -p build
        msi="aocagent.msi"
        printf "::set-output name=msi::%s\n" "$msi"
        version=`cat VERSION`
        go-msi make --msi "$PWD/$msi" --out "$PWD/build" --version $version --path "$PWD/packaging/msi/wix.json"

    - run: ls -R

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: msi
        path: "$PWD/build"

  archiving:
    name: archive all the packages into one
    needs: [rpm-amd64-packaging, rpm-arm64-packaging, msi-packaging]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # remove built artifacts since we don't need it in the final artifact
    - uses: GeekyEggo/delete-artifact@v1.0.0
      with:
        name: binary_artifacts

    - uses: actions/download-artifact@v2
      with:
        path: packages

    - name: Display structure of downloaded files
      run: ls -R

    - name: Adjust package folders
      run: |
        mv packages/amd64_rpm/x86_64/*.rpm packages/
        mv packages/arm64_rpm/aarch64/*.rpm packages/
        mv packages/msi/*.msi packages/
        rm -rf packages/amd64_rpm
        rm -rf packages/arm64_rpm
        rm -rf packages/msi

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: package_artifacts
        path: ./packages
